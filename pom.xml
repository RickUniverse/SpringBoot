<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springboot</groupId>
    <artifactId>SpringBoot</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--
        配置SpringBoot的父类
            里面管理了几乎所有项目中需要使用的jar包的版本, 默认是不需要写版本号的, 如果没有在这个父类中则需要
    -->
    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>1.5.9.RELEASE</version>
    </parent>


    <dependencies>
        <!--
            导入SpringBoot依赖
            启动器:
                spring-boot-starter(启动器): springboot 场景启动器, 帮我们导入了web模块正常运行所依赖的组件
            启动器描述:
                SpringBoot将所有的功能场景都抽取出来, 做成一个个starter(启动器), 只需要在项目中引入这些starter,
                相关的场景的所有依赖, 都会导入进来, 要用什么功能就导入什么场景的启动器
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
                简化部署:
                    这个插件可以在使用package打包时, 打成一个可执行的jar包
                    使用 java -jar [jar包] , 运行
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>